#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N2>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp G &kp I &kp F>
                ;
        };
    };

    behaviors {
        right_down: right_arrow_down_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_ARROW_DOWN_ARROW";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ARROW>, <&kp DOWN_ARROW>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        left_up: left_arrow_up_arrow {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_ARROW_UP_ARROW";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp UP_ARROW>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        n1_f1: kp_n1_kp_f1 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N1_KP_F1";
          #binding-cells = <0>;
          bindings = <&kp N1>, <&kp F1>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n2_f2: kp_n2_kp_f2 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N2_KP_F2";
          #binding-cells = <0>;
          bindings = <&kp N2>, <&kp F2>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n3_f3: kp_n3_kp_f3 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N3_KP_F3";
          #binding-cells = <0>;
          bindings = <&kp N3>, <&kp F3>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n4_f4: kp_n4_kp_f4 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N4_KP_F4";
          #binding-cells = <0>;
          bindings = <&kp N4>, <&kp F4>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n5_f5: kp_n5_kp_f5 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N5_KP_F5";
          #binding-cells = <0>;
          bindings = <&kp N5>, <&kp F5>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n6_f6: kp_n6_kp_f6 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N6_KP_F6";
          #binding-cells = <0>;
          bindings = <&kp N6>, <&kp F6>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n7_f7: kp_n7_kp_f7 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N7_KP_F7";
          #binding-cells = <0>;
          bindings = <&kp N7>, <&kp F7>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n8_f8: kp_n8_kp_f8 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N8_KP_F8";
          #binding-cells = <0>;
          bindings = <&kp N8>, <&kp F8>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n9_f9: kp_n9_kp_f9 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N9_KP_F9";
          #binding-cells = <0>;
          bindings = <&kp N9>, <&kp F9>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        n0_f10: kp_n0_kp_f10 {
          compatible = "zmk,behavior-mod-morph";
          label = "KP_N0_KP_F10";
          #binding-cells = <0>;
          bindings = <&kp N0>, <&kp F10>;
         mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "BASE"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//
//
//
//
//
//
// ┏━━━━━━━━━━━╋━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃    esc    ┃    1 !    ┃    2 @    ┃    3 #    ┃    4 $    ┃    5 %    ┃   C_SLEEP ┃   ┃   BT_N    ┃    6 ^    ┃    7 &    ┃    8 *    ┃    9 (    ┃    0 )    ┃   BT_CL   ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     Tab   ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃  K_SLEEP  ┃   ┃   Break   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃  Win      ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     `~    ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   Pg Up   ┃   ┃  Pg down  ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;:    ┃    '"     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃    caps   ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃                           ┃     N     ┃     M     ┃    <,     ┃    >.     ┃      ?/   ┃    \|     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃  Insrt    ┃    home   ┃     Ctrl  ┃     Alt   ┃                                                                           ┃     Alt   ┃    Ctrl   ┃    end    ┃  Prnt Scr ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                                 ┃   Shift   ┃   "    "  ┃     [{    ┃   ┃     ]}    ┃  Enter    ┃ Shift     ┃
//                                                 ┣━━━━━━━━━━━╋━━━━━━━━━━━┫━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//                                                 ┃ left/up   ┃    bcksp  ┃      + =  ┃   ┃   - _     ┃     del   ┃right/down ┃
//                                                 ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷           ╷

    &kp ESC    &n1_f1       &n2_f2   	&n3_f3  	&n4_f4  	&n5_f5  	&kp C_SLEEP    &bt BT_NXT	&n6_f6      &n7_f7     &n8_f8	    &n9_f9	    &n0_f10	    &bt BT_CLR
	&kp TAB    &kp Q	    &kp W	    &kp E    	&kp R	    &kp T    	&kp K_SLEEP	&kp PAUSE_BREAK &kp Y   	&kp U	    &kp I	    &kp  O	    &kp P   	&kp LWIN
	&kp GRAVE  &kp A	    &kp S	    &kp D	    &kp F	    &kp G	    &kp PG_UP		&kp PG_DN  	&kp H	    &kp J	    &kp  K	    &kp L	    &kp SEMI	&kp SQT
    &kp CAPS   &kp Z	    &kp X	    &kp C	    &kp V	    &kp B			                    	&kp N	    &kp M   	&kp COMMA	&kp DOT  	&kp SLASH   &kp BSLH
    &kp INS	   &kp HOME    &kp LCTRL    &kp LALT    &kp LSHFT	&kp SPACE	&kp LBKT		&kp RBKT    &kp ENTER	&kp RSHFT   &kp RALT    &kp RCTRL   &kp END     &kp PSCRN
			                                        &left_up    &kp BSPC	&kp EQUAL       &kp MINUS   &kp DEL 	&right_down
                        >;
                };
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        };
};
